use std::arch::asm;
use std::sync::{Arc, Mutex};
use lazy_static::lazy_static;

lazy_static! {
    static ref MUTEX: Arc<Mutex<i32>> = Arc::new(Mutex::new(0));
}

fn gateway(index: i32) 
{
    let flag = Arc::clone(&MUTEX);
    let mut flag = flag.lock().unwrap(); 
    if *flag == 0
    {    
        *flag += 1;
        payload_execution();
    }

    loop {} // Hijack current thread, don't let the process exit
}

fn payload_execution()
{
    loop {} // Here is where your code goes
}
